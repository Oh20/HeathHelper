name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job para o AppoitmentScheduler
  build_appointmentscheduler:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push AppoitmentScheduler Docker Image
        run: |
          IMAGE_NAME=oh20/appoitmentscheduler
          VERSION=$(git rev-parse --short HEAD)
          docker build -t $IMAGE_NAME:$VERSION ./AppoitmentScheduler
          docker tag $IMAGE_NAME:$VERSION $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest

  # Job para o HealthHelperAuthSystem
  build_healthhelperauthsystem:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push HealthHelperAuthSystem Docker Image
        run: |
          IMAGE_NAME=oh20/healthhelperauthsystem
          VERSION=$(git rev-parse --short HEAD)
          docker build -t $IMAGE_NAME:$VERSION ./HealthHelperAuthSystem
          docker tag $IMAGE_NAME:$VERSION $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest

  # Job para o MedicosService
  build_medicosservice:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push MedicosService Docker Image
        run: |
          IMAGE_NAME=oh20/medicosservice
          VERSION=$(git rev-parse --short HEAD)
          docker build -t $IMAGE_NAME:$VERSION ./MedicosService
          docker tag $IMAGE_NAME:$VERSION $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest

  # Job para o SchedulerConsumer
  build_schedulerconsumer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push SchedulerConsumer Docker Image
        run: |
          IMAGE_NAME=oh20/schedulerconsumer
          VERSION=$(git rev-parse --short HEAD)
          docker build -t $IMAGE_NAME:$VERSION ./SchedulerConsumer
          docker tag $IMAGE_NAME:$VERSION $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest

  # Job para o UserRegisterConsumer
  build_userregisterconsumer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push UserRegisterConsumer Docker Image
        run: |
          IMAGE_NAME=oh20/userregisterconsumer
          VERSION=$(git rev-parse --short HEAD)
          docker build -t $IMAGE_NAME:$VERSION ./UserRegisterConsumer
          docker tag $IMAGE_NAME:$VERSION $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest

  # Job de deploy
  deploy:
    runs-on: [self-hosted, windows]
    needs: [build_appointmentscheduler, build_healthhelperauthsystem, build_medicosservice, build_schedulerconsumer, build_userregisterconsumer]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Kubernetes Context (Local)
        run: |
          kubectl config use-context minikube || kubectl config use-context docker-desktop

      - name: Deploy to Local Kubernetes
        shell: pwsh
        run: |
          $SERVICES = @("AppoitmentScheduler", "HealthHelperAuthSystem", "MedicosService", "SchedulerConsumer", "UserRegisterConsumer")
          foreach ($SERVICE in $SERVICES) {
            $IMAGE_NAME = "seu-usuario/" + ($SERVICE.ToLower())
            $VERSION = git rev-parse --short HEAD
            kubectl set image deployment/$SERVICE-deployment $SERVICE-container=$IMAGE_NAME:`${VERSION}
            kubectl rollout status deployment/$SERVICE-deployment
          }